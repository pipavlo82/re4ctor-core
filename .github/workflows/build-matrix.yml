name: build-matrix
on: [push, pull_request]

jobs:
  build:
    name: build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v4

      # ---- Install deps per-OS ----
      - name: Install deps (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake ninja-build gcc

      - name: Install deps (macOS)
        if: runner.os == 'macOS'
        run: |
          brew update
          brew install cmake ninja || true

      - name: Install deps (Windows)
        if: runner.os == 'Windows'
        run: |
          choco install -y ninja cmake
        shell: powershell

      # ---- Configure & Build with Ninja on all OS ----
      - name: Configure
        run: cmake -S . -B build -G Ninja -DCMAKE_BUILD_TYPE=Release
        shell: bash

      - name: Build
        run: cmake --build build -j 4
        shell: bash

      - name: Smoke
        run: |
          EXE=""
          if [ "$RUNNER_OS" = "Windows" ]; then EXE=".exe"; fi
          ./build/re4_dump$EXE | head -c 32 | hexdump -C
        shell: bash
